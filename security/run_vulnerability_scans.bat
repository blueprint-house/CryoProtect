@echo off
REM run_vulnerability_scans.bat - Run vulnerability scans on Windows
REM
REM This script runs all vulnerability scanning tools and generates reports.
REM
REM Usage: run_vulnerability_scans.bat [daily|weekly|all]

setlocal enabledelayedexpansion

REM Set default parameters
set SCAN_TYPE=all
set REPORT_DIR=security\reports
set LOG_DIR=security\logs
set TIMESTAMP=%date:~10,4%%date:~4,2%%date:~7,2%%time:~0,2%%time:~3,2%%time:~6,2%
set TIMESTAMP=%TIMESTAMP: =0%
set LOG_FILE=%LOG_DIR%\vulnerability_scan_%TIMESTAMP%.log

REM Parse command line arguments
if "%~1" neq "" (
    set SCAN_TYPE=%~1
)

REM Create directories if they don't exist
if not exist %REPORT_DIR% mkdir %REPORT_DIR%
if not exist %LOG_DIR% mkdir %LOG_DIR%

echo Running %SCAN_TYPE% vulnerability scans at %date% %time% > %LOG_FILE%
echo Running %SCAN_TYPE% vulnerability scans at %date% %time%

REM Function to check if Python is installed
where python >nul 2>nul
if %ERRORLEVEL% neq 0 (
    echo Python is not installed or not in PATH. Please install Python 3.
    exit /b 1
)

REM Function to check if Node.js is installed
where node >nul 2>nul
if %ERRORLEVEL% neq 0 (
    echo Node.js is not installed or not in PATH. JavaScript scanning will be skipped.
    set SKIP_JS=1
) else (
    set SKIP_JS=0
)

REM Run Python Bandit scan
echo Running Bandit scan... | tee -a %LOG_FILE%
python security\scan_python_bandit.py --path . --format json --output %REPORT_DIR%\bandit_%TIMESTAMP%.json 2>&1 | tee -a %LOG_FILE%

REM Run Python Safety scan
echo Running Safety scan... | tee -a %LOG_FILE%
python security\scan_python_safety.py --requirements requirements.txt --format json --output %REPORT_DIR%\safety_%TIMESTAMP%.json 2>&1 | tee -a %LOG_FILE%

REM Run JavaScript ESLint scan if Node.js is available
if %SKIP_JS% equ 0 (
    echo Running ESLint security scan... | tee -a %LOG_FILE%
    node security\scan_js_eslint.js --path static\js --format json --output %REPORT_DIR%\eslint_%TIMESTAMP%.json 2>&1 | tee -a %LOG_FILE%
)

REM Run OWASP Dependency-Check if it's a weekly scan or all
if "%SCAN_TYPE%"=="weekly" (
    echo Running OWASP Dependency-Check scan... | tee -a %LOG_FILE%
    call security\scan_dependency_check.bat --path . --format "HTML,JSON" --output %REPORT_DIR%\dependency-check --name "CryoProtect-%TIMESTAMP%" 2>&1 | tee -a %LOG_FILE%
) else if "%SCAN_TYPE%"=="all" (
    echo Running OWASP Dependency-Check scan... | tee -a %LOG_FILE%
    call security\scan_dependency_check.bat --path . --format "HTML,JSON" --output %REPORT_DIR%\dependency-check --name "CryoProtect-%TIMESTAMP%" 2>&1 | tee -a %LOG_FILE%
)

REM Check for critical vulnerabilities
set CRITICAL_VULNS=0

REM Check Bandit results
if exist %REPORT_DIR%\bandit_%TIMESTAMP%.json (
    findstr /C:"\"issue_severity\": \"HIGH\"" %REPORT_DIR%\bandit_%TIMESTAMP%.json > nul
    if !ERRORLEVEL! equ 0 (
        set /a CRITICAL_VULNS+=1
        echo Found high severity issues in Bandit scan! | tee -a %LOG_FILE%
    )
)

REM Check Safety results
if exist %REPORT_DIR%\safety_%TIMESTAMP%.json (
    findstr /C:"\"vulnerability\"" %REPORT_DIR%\safety_%TIMESTAMP%.json > nul
    if !ERRORLEVEL! equ 0 (
        set /a CRITICAL_VULNS+=1
        echo Found vulnerabilities in Safety scan! | tee -a %LOG_FILE%
    )
)

REM Check ESLint results
if exist %REPORT_DIR%\eslint_%TIMESTAMP%.json (
    findstr /C:"security/" %REPORT_DIR%\eslint_%TIMESTAMP%.json > nul
    if !ERRORLEVEL! equ 0 (
        set /a CRITICAL_VULNS+=1
        echo Found security issues in ESLint scan! | tee -a %LOG_FILE%
    )
)

REM Generate a summary report
echo Generating vulnerability summary report...
python security\review_vulnerability_results.py --scan-dir %REPORT_DIR% --output %REPORT_DIR%\remediation_report_%TIMESTAMP%.md 2>&1 | tee -a %LOG_FILE%

REM Send alert if critical vulnerabilities found
if %CRITICAL_VULNS% gtr 0 (
    echo [SECURITY ALERT] Critical vulnerabilities found in %SCAN_TYPE% scan | tee -a %LOG_FILE%
    echo Critical vulnerabilities were found in the %SCAN_TYPE% security scan run at %date% %time%. | tee -a %LOG_FILE%
    echo Please check the scan reports in %REPORT_DIR% for details. | tee -a %LOG_FILE%
    echo Scan log: %LOG_FILE% | tee -a %LOG_FILE%
) else (
    echo No critical vulnerabilities found. | tee -a %LOG_FILE%
)

echo %SCAN_TYPE% vulnerability scans completed at %date% %time% | tee -a %LOG_FILE%
echo See %LOG_FILE% for detailed log.

endlocal