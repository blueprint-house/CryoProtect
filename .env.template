# CryoProtect v2 - Environment Variables Template
# Copy this file to .env and fill in your credentials and configuration values
# [REQUIRED] indicates variables that must be set for the application to function
# [OPTIONAL] indicates variables that have default values or can be omitted

# ===== ENVIRONMENT SELECTION =====

# [REQUIRED] Application environment
# Controls which configuration class is loaded (DevelopmentConfig, TestingConfig, StagingConfig, ProductionConfig)
# Values: development, testing, staging, production
# Default: development
FLASK_ENV=development

# [REQUIRED] Flask application entry point
# Default: app.py
FLASK_APP=app.py

# ===== DATABASE CONFIGURATION =====

# [REQUIRED] Database Connection Mode
# Controls which database connection method is used
# Options: auto, local, supabase, mcp
# - auto: Try supabase first, then fall back to local or MCP
# - local: Use only local PostgreSQL database
# - supabase: Use only Supabase database
# - mcp: Use Model Context Protocol for database operations
DB_CONNECTION_MODE=auto

# [REQUIRED] Supabase Project URL
# The base URL of your Supabase project
# Example: https://abcdefghijklm.supabase.co
SUPABASE_URL=

# [REQUIRED] Supabase Service Role Key
# IMPORTANT: This must be the service_role key, not the anon key
# You can find this in your Supabase dashboard under Project Settings > API
# Example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRzZGxteW55ZGZ1eXBpdWdta2V2Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NDc4MDE4MywiZXhwIjoyMDYwMzU2MTgzfQ.gbRPEtBa53ybbpe9pRV-FNHc-Q_g9Y-1Rd1st6DnYGE
SUPABASE_KEY=

# [OPTIONAL] Supabase Service Key (alternative name for service role key)
# Only set this if your application specifically uses this variable name
# Example: Same format as SUPABASE_KEY
SUPABASE_SERVICE_KEY=

# [OPTIONAL] Supabase Service Role Key (alternative name for service role key)
# Only set this if your application specifically uses this variable name
# Example: Same format as SUPABASE_KEY
SUPABASE_SERVICE_ROLE_KEY=

# [OPTIONAL] Supabase Project Reference ID
# The unique identifier for your Supabase project
# You can find this in your Supabase dashboard under Project Settings > General
# Example: abcdefghijklm
SUPABASE_PROJECT_ID=

# [OPTIONAL] Supabase Database Password
# Only needed for certain operations that require direct database access
# Example: StrongPassword123!
SUPABASE_DB_PASSWORD=

# [OPTIONAL] Supabase Database URL (for direct database connections)
# Example: postgresql://postgres:password@db.abcdefghijklm.supabase.co:5432/postgres
DATABASE_URL=
SUPABASE_DB_URL=

# [OPTIONAL] Supabase Database IP Address
# Used as a fallback if DNS resolution fails
# Example: 123.45.67.89
SUPABASE_DB_IP_ADDRESS=

# ===== LOCAL DATABASE CONFIGURATION =====

# [REQUIRED for local development] Local PostgreSQL database configuration
# Host for the local PostgreSQL server
LOCAL_DB_HOST=localhost
# Port for the local PostgreSQL server
LOCAL_DB_PORT=5432
# Name of the local database
LOCAL_DB_NAME=cryoprotect
# Username for the local PostgreSQL server
LOCAL_DB_USER=postgres
# Password for the local PostgreSQL server
LOCAL_DB_PASSWORD=
# Minimum number of connections in the pool
LOCAL_DB_MIN_CONNECTIONS=1
# Maximum number of connections in the pool
LOCAL_DB_MAX_CONNECTIONS=10

# [OPTIONAL] Supabase User Credentials (for CLI operations)
# Example: user@example.com
SUPABASE_USER=
# Example: StrongPassword123!
SUPABASE_PASSWORD=

# ===== ENVIRONMENT-SPECIFIC DATABASE CONFIGURATION =====

# [REQUIRED for staging environment] Staging Environment Supabase Configuration
# Only required when FLASK_ENV=staging
# Example: https://staging-project.supabase.co
STAGING_SUPABASE_URL=
# Example: Same format as SUPABASE_KEY
STAGING_SUPABASE_KEY=

# [REQUIRED for production environment] Production Environment Supabase Configuration
# Only required when FLASK_ENV=production
# Example: https://production-project.supabase.co
PRODUCTION_SUPABASE_URL=
# Example: Same format as SUPABASE_KEY
PRODUCTION_SUPABASE_KEY=

# [OPTIONAL] Testing Environment Supabase Configuration
# Only used when FLASK_ENV=testing
# Example: https://testing-project.supabase.co
TESTING_SUPABASE_URL=
# Example: Same format as SUPABASE_KEY
TESTING_SUPABASE_KEY=

# ===== SECURITY CONFIGURATION =====

# [REQUIRED] Secret Key (used for session encryption and JWT signing)
# IMPORTANT: Generate a strong random key for production
# Example: python -c "import secrets; print(secrets.token_hex(32))"
# Example: 3d6f45a5fc12445dbac2f59c3b6c7cb1
SECRET_KEY=dev-secret-key-please-change-in-production

# [OPTIONAL] JWT Secret Key (if different from SECRET_KEY)
# Used specifically for JWT token signing/verification
# Example: Same format as SECRET_KEY
JWT_SECRET_KEY=

# [OPTIONAL] JWT Token Expiration (in seconds)
# Default: 3600 (1 hour)
# Example: 86400 (24 hours)
JWT_ACCESS_TOKEN_EXPIRES=3600

# [OPTIONAL] JWT Refresh Token Expiration (in seconds)
# Default: 2592000 (30 days)
# Example: 7776000 (90 days)
JWT_REFRESH_TOKEN_EXPIRES=2592000

# [OPTIONAL] CORS Configuration
# Comma-separated list of allowed origins for CORS
# Default: * (all origins)
# Example: https://example.com,https://api.example.com
CORS_ORIGINS=*

# [OPTIONAL] Content Security Policy (CSP) Configuration
# Default: default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;
# Example: default-src 'self'; script-src 'self'; style-src 'self';
CSP_POLICY=

# ===== CACHING CONFIGURATION =====

# [OPTIONAL] Redis Configuration (for caching and rate limiting)
# Format: redis://username:password@host:port/db_number
# Example: redis://user:password@localhost:6379/0
REDIS_URL=

# [OPTIONAL] Cache Configuration
# Options: memory, redis, filesystem
# Default: memory
CACHE_TYPE=memory

# [OPTIONAL] Redis Cache URL (if using Redis cache)
# Same format as REDIS_URL
# Example: redis://user:password@localhost:6379/0
CACHE_REDIS_URL=

# [OPTIONAL] Cache Default Timeout (in seconds)
# Default: 300
# Example: 600
CACHE_DEFAULT_TIMEOUT=300

# [OPTIONAL] Cache Key Prefix
# Used to namespace cache keys
# Default: cryoprotect_
# Example: cryoprotect_v2_
CACHE_KEY_PREFIX=cryoprotect_

# [OPTIONAL] Filesystem Cache Directory (if using filesystem cache)
# Default: ./cache
# Example: /tmp/cryoprotect_cache
CACHE_DIR=./cache

# ===== RATE LIMITING CONFIGURATION =====

# [OPTIONAL] Enable/disable rate limiting
# Default: true
# Values: true, false
RATE_LIMIT_ENABLED=true

# [OPTIONAL] Rate limit storage URL
# Examples:
# - Memory storage: memory://
# - Redis storage: redis://localhost:6379/0
# Default: memory://
RATE_LIMIT_STORAGE_URL=memory://

# [OPTIONAL] Rate limiting strategy
# Options: fixed-window, moving-window, fixed-window-elastic-expiry
# Default: fixed-window
RATE_LIMIT_STRATEGY=fixed-window

# [OPTIONAL] Rate limit identification strategy
# Options: ip, user, hybrid
# Default: hybrid
RATE_LIMIT_BY=hybrid

# [OPTIONAL] Rate limit headers enabled
# Default: true
# Values: true, false
RATE_LIMIT_HEADERS_ENABLED=true

# [OPTIONAL] Role-based rate limits (JSON format)
# Default: {"anonymous":["100 per minute"]}
# Example: {"admin":["5000 per day"],"premium":["2000 per day"]}
RATE_LIMIT_ROLES={"admin":["5000 per day","500 per hour","100 per minute"],"premium":["2000 per day","200 per hour","40 per minute"],"basic":["1000 per day","100 per hour","20 per minute"]}

# [OPTIONAL] Retry-after value for rate limit exceeded responses (in seconds)
# Default: 60
# Example: 120
RATE_LIMIT_RETRY_AFTER=60

# ===== NOTIFICATION CONFIGURATION =====

# [OPTIONAL] SMTP Configuration for Email Notifications
# Example: smtp.gmail.com
NOTIFY_SMTP_SERVER=
# Example: 587
NOTIFY_SMTP_PORT=587
# Example: user@gmail.com
NOTIFY_SMTP_USER=
# Example: app-password-here
NOTIFY_SMTP_PASSWORD=
# Example: noreply@cryoprotect.com
NOTIFY_FROM_ADDR=noreply@cryoprotect.com
# Example: admin@cryoprotect.com
NOTIFY_TO_ADDRS=admin@cryoprotect.com
# Default: true
# Values: true, false
NOTIFY_SMTP_USE_TLS=true

# [OPTIONAL] Webhook Configuration for Notifications
# Example: https://hooks.slack.com/services/XXX/YYY/ZZZ
NOTIFY_WEBHOOK_URL=
# Example: {"Content-Type":"application/json","Authorization":"Bearer token"}
NOTIFY_WEBHOOK_HEADERS={"Content-Type":"application/json"}

# [OPTIONAL] Mail Configuration (Flask-Mail)
# Example: smtp.gmail.com
MAIL_SERVER=smtp.gmail.com
# Example: 587
MAIL_PORT=587
# Default: true
# Values: true, false
MAIL_USE_TLS=true
# Example: user@gmail.com
MAIL_USERNAME=
# Example: app-password-here
MAIL_PASSWORD=
# Example: noreply@cryoprotect.com
MAIL_DEFAULT_SENDER=noreply@cryoprotect.com

# ===== LOGGING CONFIGURATION =====

# [OPTIONAL] Log Level
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
# Default: INFO
LOG_LEVEL=INFO

# [OPTIONAL] Log File Path
# Default: cryoprotectant_analysis.log
# Example: /var/log/cryoprotect.log
LOG_FILE=cryoprotectant_analysis.log

# [OPTIONAL] Enable/disable file logging
# Default: 1
# Values: 1 (enabled), 0 (disabled)
LOG_TO_FILE=1

# [OPTIONAL] Log Format
# Default: %(asctime)s - %(name)s - %(levelname)s - %(message)s
# Example: %(levelname)s [%(asctime)s] %(name)s: %(message)s
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# [OPTIONAL] Log Rotation Configuration
# Maximum log file size in bytes before rotation
# Default: 10485760 (10MB)
# Example: 5242880 (5MB)
LOG_MAX_BYTES=10485760

# [OPTIONAL] Number of backup log files to keep
# Default: 5
# Example: 10
LOG_BACKUP_COUNT=5

# ===== APPLICATION CONFIGURATION =====

# [OPTIONAL] API Base URL (for external API calls)
# Example: https://api.example.com/v1
API_BASE_URL=

# [OPTIONAL] Application Base URL
# Used for generating absolute URLs
# Example: https://cryoprotect.example.com
APP_BASE_URL=

# [OPTIONAL] Debug Mode
# Default: true for development, false for other environments
# Values: true, false
DEBUG=true

# [OPTIONAL] Testing Mode
# Default: true for testing environment, false for others
# Values: true, false
TESTING=false

# [OPTIONAL] Application Timezone
# Default: UTC
# Example: America/New_York
TIMEZONE=UTC

# [OPTIONAL] Default Page Size for Paginated Results
# Default: 20
# Example: 50
DEFAULT_PAGE_SIZE=20

# [OPTIONAL] Maximum Page Size for Paginated Results
# Default: 100
# Example: 200
MAX_PAGE_SIZE=100

# ===== DEPLOYMENT CONFIGURATION =====

# [OPTIONAL] Staging Deployment SSH Configuration
# Example: staging.example.com
STAGING_SSH_HOST=
# Example: deploy
STAGING_SSH_USER=
# Example: /path/to/private_key
STAGING_SSH_KEY=

# [OPTIONAL] Production Deployment SSH Configuration
# Example: production.example.com
PRODUCTION_SSH_HOST=
# Example: deploy
PRODUCTION_SSH_USER=
# Example: /path/to/private_key
PRODUCTION_SSH_KEY=

# [OPTIONAL] Docker Configuration
# Example: 4
DOCKER_WORKERS=4
# Example: 512m
DOCKER_MEMORY_LIMIT=512m
# Example: 1.0
DOCKER_CPU_LIMIT=1.0

# ===== TESTING CONFIGURATION =====

# [OPTIONAL] Test User Credentials
# Example: test@example.com
TEST_EMAIL=
# Example: TestPassword123!
TEST_PASSWORD=

# [OPTIONAL] Migration Test Schema
# Example: test_migrations
MIGRATION_TEST_SCHEMA=

# [OPTIONAL] PubChem CID File
# Example: ./data/pubchem_cids.json
PUBCHEM_CID_FILE=

# [OPTIONAL] Test Database URL
# Example: postgresql://postgres:password@localhost:5432/test_db
TEST_DATABASE_URL=

# ===== EXTERNAL SERVICES CONFIGURATION =====

# [OPTIONAL] ChEMBL API Configuration
# Example: https://www.ebi.ac.uk/chembl/api/data
CHEMBL_API_URL=https://www.ebi.ac.uk/chembl/api/data

# [OPTIONAL] ChEMBL API Key for authentication
# Required if the ChEMBL API requires authentication
# Example: your-api-key-here
CHEMBL_API_KEY=

# [OPTIONAL] Flag to indicate if ChEMBL API Key is required
# Set to true if the ChEMBL API requires authentication
# Default: false
# Values: true, false
CHEMBL_API_KEY_REQUIRED=false

# [REQUIRED] ChEMBL API delay between requests (in seconds)
# Default: 0.3
# Example: 0.5
CHEMBL_API_DELAY=0.3

# [OPTIONAL] Path to file containing ChEMBL IDs to process
# If not provided, the script will search for potential cryoprotectants
# Example: data/chembl_ids.txt
CHEMBL_ID_FILE=

# [OPTIONAL] ChEMBL client configuration
# Default: cache/chembl
CHEMBL_CACHE_DIR=cache/chembl
# Default: 5.0 (spec: ≤5 requests/sec)
CHEMBL_REQUESTS_PER_SECOND=5.0
# Default: 5
CHEMBL_MAX_RETRIES=5
# Default: 3
CHEMBL_FAILURE_THRESHOLD=3
# Default: 60
CHEMBL_RECOVERY_TIMEOUT=60
# Default: 2592000 (30 days)
CHEMBL_CACHE_TTL=2592000
# Default: 1000
CHEMBL_MEMORY_CACHE_SIZE=1000
# Default: 80.0 (percentage)
CHEMBL_MEMORY_THRESHOLD=80.0

# [OPTIONAL] Batch processing and checkpointing
# Default: 100 (spec: 100-500 molecules per batch)
CHEMBL_BATCH_SIZE=100
# Default: 10
CHEMBL_MEMORY_CHECK_FREQUENCY=10
# Default: checkpoints
CHECKPOINT_DIR=checkpoints

# [OPTIONAL] PubChem API Configuration
# Example: https://pubchem.ncbi.nlm.nih.gov/rest/pug
PUBCHEM_API_URL=

# [OPTIONAL] Sentry Configuration for Error Tracking
# Example: https://abcdef@sentry.io/123456
SENTRY_DSN=

# [OPTIONAL] Sentry Environment
# Default: Same as FLASK_ENV
# Example: production
SENTRY_ENVIRONMENT=

# [OPTIONAL] Sentry Sample Rate (0.0 to 1.0)
# Default: 1.0
# Example: 0.5
SENTRY_SAMPLE_RATE=1.0

# ===== DOCKER SECRETS CONFIGURATION =====

# [OPTIONAL] Docker Secrets Path
# Default: /run/secrets
# Example: /var/run/secrets
DOCKER_SECRETS_PATH=/run/secrets

# [OPTIONAL] Docker Secrets Mapping (JSON format)
# Maps environment variable names to Docker secret file names
# Example: {"SUPABASE_KEY":"supabase_key","SECRET_KEY":"secret_key"}
DOCKER_SECRETS_MAPPING={"SUPABASE_KEY":"supabase_key","SECRET_KEY":"secret_key","SUPABASE_DB_PASSWORD":"db_password"}